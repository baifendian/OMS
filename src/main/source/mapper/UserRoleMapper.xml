<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bfd.oms.dao.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.bfd.oms.model.UserRole" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, role_id, status, create_time, update_time, create_user, update_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.bfd.oms.model.UserRoleKey" >
    select 
    <include refid="Base_Column_List" />
    from user_role
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and status=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bfd.oms.model.UserRoleKey" >
    delete from user_role
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertSelective" parameterType="com.bfd.oms.model.UserRole" >
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bfd.oms.model.UserRole" >
   update user_role
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </update>
 	<update id="setUserRole" parameterType="com.bfd.oms.model.UserRole">
      update user_role set 
       role_id = #{roleId,jdbcType=BIGINT},
       update_time = #{updateTime,jdbcType=TIMESTAMP},
       update_user = #{updateUser,jdbcType=VARCHAR}
       where user_id = #{userId,jdbcType=BIGINT}
       
  	</update>
</mapper>